---
import Layout from "../../layouts/Layout.astro";
import VoiceReader from "../../components/VoiceReader.tsx";
import SocialShare from "../../components/SocialShare.tsx";

import { getEntry, render, type CollectionEntry } from "astro:content";

const { slug } = Astro.params;
const post = await getEntry("blog", slug as string);
if (!post) {
    throw new Error(`Post not found: ${slug}`);
}
const typedPost = post as CollectionEntry<"blog">;

const { Content, headings } = await render(typedPost);

// Enhanced reading time calculation (average 200 words per minute)
function calculateReadingTime(text: string, wordsPerMinute = 200): number {
    // Remove markdown syntax and HTML tags for more accurate word count
    const plainText = text
        .replace(/```[\s\S]*?```/g, '') // Remove code blocks
        .replace(/`[^`]*`/g, '') // Remove inline code
        .replace(/\[([^\]]*)\]\([^)]*\)/g, '$1') // Remove markdown links
        .replace(/<[^>]*>/g, '') // Remove HTML tags
        .replace(/[#*_~`]/g, '') // Remove markdown formatting
        .trim();
    
    const words = plainText.split(/\s+/).filter(word => word.length > 0).length;
    return Math.max(1, Math.round(words / wordsPerMinute));
}

// Generate AI hashtags for social sharing
function generateAIHashtags(title: string, tags: string[]): string[] {
    const aiHashtags = [];
    
    // Add title-based hashtags (extract key words)
    const titleWords = title.toLowerCase().split(/\s+/)
        .filter(word => word.length > 3 && !['the', 'and', 'for', 'with', 'that', 'this'].includes(word))
        .slice(0, 2);
    titleWords.forEach(word => aiHashtags.push(`#${word}`));
    
    // Add existing tags with # prefix
    tags.slice(0, 3).forEach(tag => aiHashtags.push(`#${tag.replace(/\s+/g, '')}`));
    
    // Add trending tech hashtags
    const trendingTags = ['#WebDev', '#TechTips', '#Programming', '#AI', '#Innovation', '#FullStack'];
    aiHashtags.push(trendingTags[Math.floor(Math.random() * trendingTags.length)]);
    
    return [...new Set(aiHashtags)]; // Remove duplicates
}

// Generate AI summary for social sharing
function generateAISummary(excerpt: string, title: string): string {
    const hookPhrases = [
        "ðŸš€ Discover:",
        "ðŸ’¡ Learn how to:",
        "ðŸ”¥ Master the art of:",
        "âœ¨ Unlock the secrets of:",
        "ðŸŽ¯ Essential guide to:"
    ];
    
    const hook = hookPhrases[Math.floor(Math.random() * hookPhrases.length)];
    const summary = excerpt.length > 120 ? excerpt.substring(0, 117) + '...' : excerpt;
    
    return `${hook} ${summary}\n\n#TechBlog #Learning #Development`;
}

// Get plain text from content for reading time and voice reader
const contentString = typedPost.body || "";
const readingTime = typedPost.data.readingTime || calculateReadingTime(contentString);
const currentUrl = `${Astro.site}blog/${slug}`;
const aiHashtags = generateAIHashtags(typedPost.data.title, typedPost.data.tags);
const aiSummary = generateAISummary(typedPost.data.excerpt, typedPost.data.title);
---

<Layout title={`${typedPost.data.title} | Neeraj Mukta`}>
    <main
        class="pt-16 pb-16 min-h-screen"
        role="main"
        aria-label="Blog post content"
    >
        {/* Skip to content link for accessibility */}
        <a 
            href="#article-content" 
            class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary-600 text-white px-4 py-2 rounded z-50"
        >
            Skip to article content
        </a>

        {/* Back to Blog List Button */}
        <div class="max-w-6xl mx-auto px-4">
            <a
                href="/blog"
                class="inline-flex items-center gap-2 mt-8 mb-4 text-primary-600 dark:text-primary-400 font-medium text-base no-underline hover:no-underline focus:no-underline focus:ring-2 focus:ring-primary-500 rounded"
                style="text-decoration: none;"
                aria-label="Go back to blog list"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="2"
                    stroke="currentColor"
                    class="w-5 h-5"
                    aria-hidden="true"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M15.75 19.5L8.25 12l7.5-7.5"></path>
                </svg>
                Back to Blogs
            </a>
        </div>

        <div class="container flex flex-col lg:flex-row gap-8 max-w-7xl mx-auto">
            {/* Main Blog Content */}
            <article
                class="flex-1 max-w-4xl mx-auto bg-white/80 dark:bg-dark-900/80 rounded-xl shadow-lg p-8"
                id="article-content"
                role="article"
                aria-labelledby="article-title"
            >
                {/* Article Header */}
                <header class="mb-8">
                    <div class="flex flex-col items-center mb-8">
                        <img
                            src={typedPost.data.image}
                            alt={typedPost.data.title}
                            class="w-full h-64 object-cover mb-6 rounded-lg shadow-md"
                            loading="lazy"
                        />
                        
                        <h1
                            id="article-title"
                            class="text-3xl md:text-4xl lg:text-5xl font-display font-bold mb-4 text-center leading-tight"
                        >
                            {typedPost.data.title}
                        </h1>

                        <div class="flex gap-2 mb-4 flex-wrap justify-center">
                            {
                                typedPost.data.tags.map((tag: string) => (
                                    <span 
                                        class="skill-badge"
                                        role="img"
                                        aria-label={`Tag: ${tag}`}
                                    >
                                        {tag}
                                    </span>
                                ))
                            }
                        </div>

                        <div
                            class="flex items-center gap-4 mb-4 text-dark-500 dark:text-dark-400 text-sm"
                            role="complementary"
                            aria-label="Article metadata"
                        >
                            <time
                                datetime={typedPost.data.publishDate.toISOString()}
                                class="flex items-center gap-1"
                            >
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                                {
                                    new Date(
                                        typedPost.data.publishDate,
                                    ).toLocaleDateString("en-US", {
                                        year: "numeric",
                                        month: "long",
                                        day: "numeric",
                                    })
                                }
                            </time>
                            <span aria-hidden="true">â€¢</span>
                            <span class="flex items-center gap-1">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                {readingTime} min read
                            </span>
                            <span aria-hidden="true">â€¢</span>
                            <span class="flex items-center gap-1">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                </svg>
                                {typedPost.data.author}
                            </span>
                        </div>
                    </div>

                    <p
                        class="text-lg text-dark-600 dark:text-dark-400 mb-8 text-center leading-relaxed"
                        role="doc-subtitle"
                    >
                        {typedPost.data.excerpt}
                    </p>
                </header>

                {/* Article Content */}
                <div 
                    class="prose prose-lg dark:prose-invert mx-auto max-w-none prose-headings:scroll-mt-20 prose-a:text-primary-600 dark:prose-a:text-primary-400 prose-code:text-primary-600 dark:prose-code:text-primary-400"
                    role="document"
                >
                    <Content />
                </div>

                {/* Article Footer */}
                <footer class="mt-12 pt-8 border-t border-gray-200 dark:border-dark-700">
                    <div class="flex flex-wrap gap-2 mb-6">
                        <span class="text-sm font-medium text-gray-600 dark:text-gray-400">Tags:</span>
                        {
                            typedPost.data.tags.map((tag: string) => (
                                <a 
                                    href={`/blog?tag=${encodeURIComponent(tag)}`}
                                    class="text-sm bg-gray-100 dark:bg-dark-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded hover:bg-primary-100 dark:hover:bg-primary-900 transition-colors"
                                    aria-label={`View all posts tagged with ${tag}`}
                                >
                                    #{tag}
                                </a>
                            ))
                        }
                    </div>
                    
                    <div class="text-sm text-gray-500 dark:text-gray-400">
                        <p>Share this article with your network to help others learn!</p>
                    </div>
                </footer>
            </article>

            {/* Enhanced Sidebar */}
            <aside class="w-full lg:w-80 space-y-6">
                {/* Voice Reader */}
                <div class="sticky top-32">
                    <VoiceReader 
                        content={contentString}
                        title={typedPost.data.title}
                        client:load
                    />
                </div>

                {/* Table of Contents */}
                {headings.length > 0 && (
                    <nav 
                        class="bg-white/90 dark:bg-dark-800/90 rounded-xl shadow-lg p-6"
                        aria-labelledby="toc-heading"
                        role="navigation"
                    >
                        <h3 id="toc-heading" class="text-lg font-semibold mb-4 flex items-center gap-2">
                            <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                            </svg>
                            Table of Contents
                        </h3>
                        <ul class="space-y-2 text-sm">
                            {headings.map((heading) => (
                                <li style={`margin-left: ${(heading.depth - 1) * 1}rem`}>
                                    <a 
                                        href={`#${heading.slug}`}
                                        class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors block py-1 focus:ring-2 focus:ring-primary-500 rounded"
                                        aria-label={`Go to section: ${heading.text}`}
                                    >
                                        {heading.text}
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </nav>
                )}

                {/* Related Posts Placeholder */}
                <div class="bg-white/90 dark:bg-dark-800/90 rounded-xl shadow-lg p-6">
                    <h3 class="text-lg font-semibold mb-4 flex items-center gap-2">
                        <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                        Related Articles
                    </h3>
                    <p class="text-sm text-gray-500 dark:text-gray-400">
                        AI-powered related articles coming soon!
                    </p>
                </div>

                {/* Newsletter Signup */}
                <div class="bg-gradient-to-br from-primary-50 to-primary-100 dark:from-primary-900/20 dark:to-primary-800/20 rounded-xl shadow-lg p-6">
                    <h3 class="text-lg font-semibold mb-2">Stay Updated</h3>
                    <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
                        Get the latest tech insights and tutorials delivered to your inbox.
                    </p>
                    <div class="flex gap-2">
                        <input 
                            type="email" 
                            placeholder="Enter your email"
                            class="flex-1 px-3 py-2 rounded border border-gray-300 dark:border-dark-600 dark:bg-dark-700 text-sm focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                            aria-label="Email address for newsletter"
                        />
                        <button class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-primary-500">
                            Subscribe
                        </button>
                    </div>
                </div>
            </aside>
        </div>

        {/* Enhanced Floating Share Button */}
        <div class="fixed bottom-8 left-8 z-50">
            <SocialShare 
                title={typedPost.data.title}
                excerpt={typedPost.data.excerpt}
                url={currentUrl}
                image={typedPost.data.image}
                aiSummary={aiSummary}
                aiHashtags={aiHashtags}
                client:load
            />
        </div>

        {/* Accessibility: High contrast toggle */}
        <button
            id="high-contrast-toggle"
            class="fixed bottom-8 right-8 bg-gray-800 hover:bg-gray-900 text-white rounded-full p-3 shadow-lg transition-colors focus:ring-2 focus:ring-white z-50"
            title="Toggle high contrast mode"
            aria-label="Toggle high contrast mode for better accessibility"
        >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
            </svg>
        </button>
    </main>

    {/* Enhanced Accessibility Scripts */}
    <script>
        // High contrast mode toggle
        document.getElementById('high-contrast-toggle')?.addEventListener('click', () => {
            document.documentElement.classList.toggle('high-contrast');
            const isHighContrast = document.documentElement.classList.contains('high-contrast');
            localStorage.setItem('high-contrast', isHighContrast.toString());
        });

        // Load high contrast preference
        if (localStorage.getItem('high-contrast') === 'true') {
            document.documentElement.classList.add('high-contrast');
        }

        // Keyboard navigation for voice reader and social share
        document.addEventListener('keydown', (e) => {
            // Space bar to play/pause voice reader
            if (e.code === 'Space' && e.target === document.body) {
                e.preventDefault();
                // This would interact with the VoiceReader component
            }
            
            // Escape to close any open modals
            if (e.code === 'Escape') {
                // This would interact with the SocialShare component
            }
        });

        // Focus management for better accessibility
        const skipLink = document.querySelector('a[href="#article-content"]');
        skipLink?.addEventListener('click', (e) => {
            e.preventDefault();
            const target = document.getElementById('article-content');
            target?.focus();
            target?.scrollIntoView({ behavior: 'smooth' });
        });

        // Smooth scrolling for table of contents
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const targetId = this.getAttribute('href')?.substring(1);
                const target = document.getElementById(targetId || '');
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                    // Set focus for screen readers
                    target.setAttribute('tabindex', '-1');
                    target.focus();
                }
            });
        });
    </script>

    {/* High Contrast CSS */}
    <style>
        .high-contrast {
            filter: contrast(150%) saturate(0);
        }
        
        .high-contrast .skill-badge {
            background: #000 !important;
            color: #fff !important;
            border: 2px solid #fff !important;
        }
        
        .high-contrast .bg-primary-600 {
            background: #000 !important;
            border: 2px solid #fff !important;
        }
        
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border: 0;
        }
        
        .focus\\:not-sr-only:focus {
            position: static;
            width: auto;
            height: auto;
            padding: 0.5rem 1rem;
            margin: 0;
            overflow: visible;
            clip: auto;
            white-space: normal;
        }
        
        /* Enhanced focus indicators */
        a:focus,
        button:focus,
        input:focus,
        select:focus,
        textarea:focus {
            outline: 2px solid #3b82f6;
            outline-offset: 2px;
        }
        
        /* Improved text scaling */
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }
    </style>
</Layout>
